openapi: 3.0.0
info:
  title: Tasks API
  description: API documentation for managing tasks
  version: 1.0.0
tags:
  - name: Tasks
    description: Tasks operations
paths:
  /api/v1/tasks:
    get:
      summary: Get all tasks
      operationId: index
      tags:
        - Tasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              example:
                data:
                  - id: 1
                    title: "Test Task 1"
                    description: "Description of Test Task 1"
                    date: "2024-03-16"
                    location: "Location 1"
                    details: "Details of Test Task 1"
                    user_id: 1
                  - id: 2
                    title: "Test Task 2"
                    description: "Description of Test Task 2"
                    date: "2024-03-17"
                    location: "Location 2"
                    details: "Details of Test Task 2"
                    user_id: 2
                pagination:
                  total: 100
                  per_page: 10
                  current_page: 1
                  last_page: 10
                  from: 1
                  to: 10
    post:
      summary: Create a new task
      operationId: store
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              example:
                id: 1
                url: http://example.com/api/v1/tasks/1
        '400':
          description: Bad request
        '500':
          description: Internal server
  /api/v1/tasks/{taskId}:
    get:
      summary: Get a task by ID
      operationId: show
      tags:
        - Tasks
      parameters:
        - name: taskId
          in: path
          required: true
          description: ID of the task to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
              example:
                id: 1
                title: "Test Task 1"
                description: "Description of Test Task 1"
                date: "2024-03-16"
                location: "Location 1"
                details: "Details of Test Task 1"
                user_id: 1
        '404':
          description: Not found
    put:
      summary: Update a task
      operationId: update
      tags:
        - Tasks
      parameters:
        - name: taskId
          in: path
          required: true
          description: ID of the task to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
        '404':
          description: Not found
        '500':
          description: Internal server
    delete:
      summary: Delete a task
      operationId: destroy
      tags:
        - Tasks
      parameters:
        - name: taskId
          in: path
          required: true
          description: ID of the task to delete
          schema:
            type: integer
      responses:
        '204':
          description: No content
        '404':
          description: Not found
        '500':
          description: Internal server
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        date:
          type: string
          format: date
        location:
          type: string
        details:
          type: string
        user_id:
          type: integer
      required:
        - title
        - date
        - location
    TaskRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        date:
          type: string
          format: date
        location:
          type: string
        details:
          type: string
      required:
        - title
        - date
        - location
